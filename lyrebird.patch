diff --git a/cmd/lyrebird/lyrebird.go b/cmd/lyrebird/lyrebird.go
index 3480767..8583b23 100644
--- a/cmd/lyrebird/lyrebird.go
+++ b/cmd/lyrebird/lyrebird.go
@@ -27,10 +27,9 @@
 
 // Go language Tor Pluggable Transport suite.  Works only as a managed
 // client/server.
-package main
+package lyrebird
 
 import (
-	"flag"
 	"fmt"
 	"io"
 	golog "log"
@@ -38,6 +37,7 @@ import (
 	"net/url"
 	"os"
 	"path"
+	"strconv"
 	"slices"
 	"syscall"
 
@@ -53,18 +53,19 @@ import (
 const (
 	lyrebirdLogFile = "lyrebird.log"
 	socksAddr       = "127.0.0.1:0"
+	LyrebirdVersion = "0.5.0"
+	LyrebirdLogFile = lyrebirdLogFile
 )
 
-var lyrebirdVersion = "devel"
 var stateDir string
 var termMon *termMonitor
 
-func clientSetup() (launched bool, listeners []net.Listener) {
+func clientSetup(meekPort, obfs2Port, obfs3Port, obfs4Port, scramblesuitPort, webtunnelPort *int) (launched bool, listeners []net.Listener) {
 	ptClientInfo, err := pt.ClientSetup(transports.Transports())
 	if err != nil {
 		golog.Fatal(err)
 	}
-	pt.ReportVersion("lyrebird", lyrebirdVersion)
+	pt.ReportVersion("lyrebird", LyrebirdVersion)
 
 	ptClientProxy, err := ptGetProxy(slices.Contains(ptClientInfo.MethodNames, "snowflake"))
 	if err != nil {
@@ -91,7 +92,22 @@ func clientSetup() (launched bool, listeners []net.Listener) {
 			pt.Log(pt.LogSeverityNotice, e.String())
 		})
 
-		ln, err := net.Listen("tcp", socksAddr)
+		realSocksAddr := socksAddr
+		if name == "obfs4" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*obfs4Port))
+		} else if name == "meek_lite" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*meekPort))
+		} else if name == "obfs2" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*obfs2Port))
+		} else if name == "obfs3" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*obfs3Port))
+		} else if name == "scramblesuit" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*scramblesuitPort))
+		} else if name == "webtunnel" {
+			realSocksAddr = net.JoinHostPort("127.0.0.1", strconv.Itoa(*webtunnelPort))
+		}
+
+		ln, err := net.Listen("tcp", realSocksAddr)
 		if err != nil {
 			_ = pt.CmethodError(name, err.Error())
 			continue
@@ -198,7 +214,7 @@ func serverSetup() (launched bool, listeners []net.Listener) {
 	if err != nil {
 		golog.Fatal(err)
 	}
-	pt.ReportVersion("lyrebird", lyrebirdVersion)
+	pt.ReportVersion("lyrebird", LyrebirdVersion)
 
 	for _, bindaddr := range ptServerInfo.Bindaddrs {
 		name := bindaddr.MethodName
@@ -310,22 +326,20 @@ func copyLoop(a net.Conn, b net.Conn) error {
 	return firstErr(<-errChan, err, a.Close(), b.Close())
 }
 
-func main() {
+func getVersion() string {
+       return fmt.Sprintf("lyrebird-%s", LyrebirdVersion)
+}
+
+func Start(meekPort, obfs2Port, obfs3Port, obfs4Port, scramblesuitPort, webtunnelPort *int, logLevelStr *string, enableLogging *bool, unsafeLogging *bool) {
 	// Initialize the termination state monitor as soon as possible.
 	termMon = newTermMonitor()
 
-	// Handle the command line arguments.
-	_, execName := path.Split(os.Args[0])
-	showVer := flag.Bool("version", false, "Print version and exit")
-	logLevelStr := flag.String("logLevel", "ERROR", "Log level (ERROR/WARN/INFO/DEBUG)")
-	enableLogging := flag.Bool("enableLogging", false, "Log to TOR_PT_STATE_LOCATION/"+lyrebirdLogFile)
-	unsafeLogging := flag.Bool("unsafeLogging", false, "Disable the address scrubber")
-	flag.Parse()
-
-	if *showVer {
-		fmt.Printf("lyrebird %s\n", lyrebirdVersion)
-		os.Exit(0)
+	if *logLevelStr == "" {
+		*logLevelStr = "ERROR"
 	}
+
+	execName := "lyrebird"
+
 	if err := log.SetLogLevel(*logLevelStr); err != nil {
 		golog.Fatalf("[ERROR]: %s - failed to set log level: %s", execName, err)
 	}
@@ -344,16 +358,15 @@ func main() {
 		golog.Fatalf("[ERROR]: %s - failed to initialize logging", execName)
 	}
 	if err = transports.Init(); err != nil {
-		log.Errorf("%s - failed to initialize transports: %s", execName, err)
-		os.Exit(-1)
+		log.Noticef("%s - failed to initialize transports: %s", execName, err)
 	}
 
-	log.Noticef("%s - launched", lyrebirdVersion)
+	log.Noticef("%s - launched", getVersion())
 
 	// Do the managed pluggable transport protocol configuration.
 	if isClient {
 		log.Infof("%s - initializing client transport listeners", execName)
-		launched, ptListeners = clientSetup()
+		launched, ptListeners = clientSetup(meekPort, obfs2Port, obfs3Port, obfs4Port, scramblesuitPort, webtunnelPort)
 	} else {
 		log.Infof("%s - initializing server transport listeners", execName)
 		launched, ptListeners = serverSetup()
@@ -385,3 +398,11 @@ func main() {
 	}
 	termMon.wait(true)
 }
+
+func Stop() {
+	log.Noticef("obfs4 Stop: synthesizing SIGINT and SIGTERM")
+
+	termMon.sigChan <- syscall.SIGINT
+
+	termMon.sigChan <- syscall.SIGTERM
+}
diff --git a/cmd/lyrebird/proxy_http.go b/cmd/lyrebird/proxy_http.go
index f1eae42..529ed12 100644
--- a/cmd/lyrebird/proxy_http.go
+++ b/cmd/lyrebird/proxy_http.go
@@ -25,7 +25,7 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
-package main
+package lyrebird
 
 import (
 	"bufio"
diff --git a/cmd/lyrebird/proxy_socks4.go b/cmd/lyrebird/proxy_socks4.go
index d416f27..c5e1a05 100644
--- a/cmd/lyrebird/proxy_socks4.go
+++ b/cmd/lyrebird/proxy_socks4.go
@@ -31,7 +31,7 @@
  * license that can be found in the LICENSE file.
  */
 
-package main
+package lyrebird
 
 import (
 	"errors"
diff --git a/cmd/lyrebird/pt_extras.go b/cmd/lyrebird/pt_extras.go
index 986d294..ec170c6 100644
--- a/cmd/lyrebird/pt_extras.go
+++ b/cmd/lyrebird/pt_extras.go
@@ -25,7 +25,7 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
-package main
+package lyrebird
 
 import (
 	"errors"
diff --git a/cmd/lyrebird/termmon.go b/cmd/lyrebird/termmon.go
index 42c2f84..93794bb 100644
--- a/cmd/lyrebird/termmon.go
+++ b/cmd/lyrebird/termmon.go
@@ -25,7 +25,7 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
-package main
+package lyrebird
 
 import (
 	"io"
diff --git a/cmd/lyrebird/termmon_linux.go b/cmd/lyrebird/termmon_linux.go
index 926e630..0c872cb 100644
--- a/cmd/lyrebird/termmon_linux.go
+++ b/cmd/lyrebird/termmon_linux.go
@@ -25,7 +25,7 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
-package main
+package lyrebird
 
 import (
 	"fmt"
diff --git a/transports/transports.go b/transports/transports.go
index 08c09c4..8be7323 100644
--- a/transports/transports.go
+++ b/transports/transports.go
@@ -33,7 +33,6 @@ import (
 	"fmt"
 	"sync"
 
-	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/transports/snowflake"
 	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/transports/webtunnel"
 
 	"gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/transports/base"
@@ -93,7 +92,6 @@ func Init() error {
 		new(obfs3.Transport),
 		new(obfs4.Transport),
 		new(scramblesuit.Transport),
-		new(snowflake.Transport),
 		webtunnel.Transport,
 	} {
 		if err := Register(v); err != nil {
